input {
  file {
    path => "/var/log/auth.log"
    start_position => "end"   # <-- Start reading new logs only
    sincedb_path => "/dev/null" # set a file for persistent knowledge
    type => "auth"
  }
}

filter {
  if [type] == "auth" {
    # Parse syslog format
    grok {
      match => { "message" => "%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:hostname} %{DATA:process}(?:\[%{POSINT:pid}\])?: %{GREEDYDATA:message}" }
    }

    # Parse sudo commands specifically
    if [process] == "sudo" {
      grok {
        match => { "message" => "%{USER:user} : TTY=%{WORD:tty} ; PWD=%{PATH:pwd} ; USER=%{USER:sudo_user} ; COMMAND=%{GREEDYDATA:command}" }
        add_tag => [ "sudo_command" ]
      }

      # Parse command and arguments separately
      dissect {
        mapping => {
          "command" => "%{command_binary} %{command_args}"
        }
        tag_on_failure => []
      }

      # Add timestamp
      date {
        match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        target => "@timestamp"
      }

      # Remove unnecessary fields
      mutate {
        remove_field => [ "timestamp", "message" ]
      }
    } else {
      # Drop non-sudo entries
      drop {}
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    index => "auth-%{+YYYY.MM.dd}"
  }

  # For debugging (optional)
  stdout {
    codec => rubydebug
  }
}
